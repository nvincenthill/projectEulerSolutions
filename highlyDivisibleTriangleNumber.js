// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28

// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

const findTriangleNumber = num => {
  let sum = 0;
  for (let i = 1; i <= num; i += 1) {
    sum += i;
  }
  return sum;
};

const getNumberOfDivisors = num => {
  const divisors = 1;
  let max = num - 1;

  for (let i = 1; i < max; i += 1) {
    if (num % i == 0) {
      divisors += 2;
      max = num / i;
    }
  }

  return divisors;
};

const getTriangleNumberWithNDivisors = n => {
  let divisors = 0;
  let tri_sum;

  for (let i = 1; divisors < n; i += 1) {
    tri_sum = findTriangleNumber(i);
    divisors = getNumberOfDivisors(tri_sum);
  }
  return tri_sum;
};

// tests
// console.log(getTriangleNumberWithNDivisors(500)); // 76576500
